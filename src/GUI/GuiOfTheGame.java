/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Characters.Kamina;
import Execution.Execute;
import Execution.PausablePlayer;
import GameObjects.GameObject;
import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.IOException;
import save.Data;

/**
 *
 * @author Medo
 */
public class GuiOfTheGame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    int temp_hp;
    public Data player;
    private PausablePlayer music;
    public Kamina kamina;
    public Execute game;
    boolean gameStart;
    public final String start = "Welcome to Gates of the Hell\nif you think your self smart click the x button and close the game\nI am a game created by "
            + "some tired programers who have exams and don't have time"
            + "\nmay I have your name?",
            newGame = "new game with your name has been created enjoy :",
            loading = "your game is loaded";

    public GuiOfTheGame() throws FileNotFoundException, IOException {
        super("Gates of hell");
        getContentPane().setBackground(Color.lightGray);
        temp_hp = 0;
        music = new PausablePlayer("music/begin.mp3");
        music.play();
        gameStart = true;
        initComponents();
        loadMap("/Maps/Welcome.png");
        kamina = new Kamina();
        this.jTextField1.setText("");
        jTextField1.requestFocus();
        showText(start);
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiOfTheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiOfTheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiOfTheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiOfTheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    public void setHpLabel(Integer hpValue) {
        jLabel3.setText("HP: " + hpValue.toString());
    }

    public void setScoreLabel(Integer scoreValue) {
        jLabel2.setText("Score: " + scoreValue.toString());
    }

    public void setMissionLabel(String mission) {
        jLabel5.setText("Current Mission: " + mission);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btn_help = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gates Of The Hell");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jTextField1.setText(" ");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setDragEnabled(true);
        jTextArea1.setSelectionColor(new java.awt.Color(102, 255, 51));
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Score:");
        jLabel2.setToolTipText("");

        jLabel3.setText("HP:");

        jLabel5.setText("Current Mission:");

        btn_help.setText("Help");
        btn_help.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mouseClick(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(44, 44, 44)
                                .addComponent(jLabel3))))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                    .addComponent(btn_help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(28, 28, 28)
                        .addComponent(jLabel5)
                        .addGap(22, 22, 22))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_help, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     * Action done when the enter pressed on the input TextField
     */
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        String enteredText = this.jTextField1.getText();
        this.jTextArea1.append(">>>" + enteredText + "\n");
        music.stop();
        jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
        if (gameStart) {
            player = new Data(enteredText);
            if (player.checkExist()) {
                player.Loadnow();
                showText(loading);
            } else {
                player.saveNow('a', 0, new GameObject[0]);
                showText(newGame);
            }
            game = new Execute(player, kamina);
            showText(game.initiateChapter());
            gameStart = false;
        } else if (game.readEnd) {
            game.readEnd = false;
            showText(game.initiateChapter());
        } else {
            showText(game.engine(enteredText));
        }
        loadMap(game.getPhotoPath());
        setHpLabel(kamina.hp);
        

        if (temp_hp > kamina.hp) {
            getContentPane().setBackground(Color.red);
        } else {
            getContentPane().setBackground(Color.lightGray);
        }
        temp_hp = kamina.hp;
        setScoreLabel(kamina.score);
        setMissionLabel(game.currentMission);
        this.jTextField1.selectAll();
        if (game.gameFinished) {
            this.jTextField1.setText("");
        }
        jTextField1.setEnabled(!game.gameFinished);
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased

        getContentPane().setBackground(Color.lightGray);
    }//GEN-LAST:event_jTextField1KeyReleased

    private void mouseClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClick
        Help h = new Help();
        h.setVisible(true);
    }//GEN-LAST:event_mouseClick
    /**
     *
     * @param Result THE RESULT CAME FROM THE PARSER Function
     */
    public void showText(String Result) {
        this.jTextArea1.append(Result + "\n\n");
    }

    /**
     *
     * @param hpValue the integer value of health
     * @param scorethe value of the score
     */
    public final void loadMap(String filePath) {
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource(filePath)));
    }
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]){
     /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    /*try {
     for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
     if ("Nimbus".equals(info.getName())) {
     javax.swing.UIManager.setLookAndFeel(info.getClassName());
     break;
     }
     }
     } catch (ClassNotFoundException ex) {
     java.util.logging.Logger.getLogger(GuiOfTheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (InstantiationException ex) {
     java.util.logging.Logger.getLogger(GuiOfTheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (IllegalAccessException ex) {
     java.util.logging.Logger.getLogger(GuiOfTheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     } catch (javax.swing.UnsupportedLookAndFeelException ex) {
     java.util.logging.Logger.getLogger(GuiOfTheGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     }*/
    //</editor-fold>

    /* Create and display the form */
    /*java.awt.EventQueue.invokeLater(new Runnable() {
     @Override
     public void run() {
     try {
     new GuiOfTheGame().setVisible(true);
     } catch (FileNotFoundException ex) {
     Logger.getLogger(GuiOfTheGame.class.getName()).log(Level.SEVERE, null, ex);
     } catch (IOException ex) {
     Logger.getLogger(GuiOfTheGame.class.getName()).log(Level.SEVERE, null, ex);
     }
     }
     });*/
    //}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) throws FileNotFoundException, IOException {
        // TODO code application logic here

        GuiOfTheGame gui = new GuiOfTheGame();
        gui.setVisible(true);
    }
}